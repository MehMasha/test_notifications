version: "3.9"

services:   
  web:
    build: .
    entrypoint: /notifications/start.sh
    links:
      - redis
    depends_on:
      - db
    volumes:
      - logging:/notifications/log.json
      - static:/notifications/static/
  db:
    image: postgres
    env_file: 
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
    - "5432:5432"
  nginx:
    image: nginx
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    - static:/var/www/static
    ports:
    - "8080:80"
    depends_on:
    - web
  celery-worker:
    build: .
    container_name: celery-worker
    entrypoint: celery
    command: -A notifications.celery worker --loglevel=info
    environment:
        CELERY_BROKER_URL: "redis://redis:6379/0"
        CELERY_RESULT_BACKEND: "redis://redis:6379/0"    
    volumes:
    - .:/var/www/app/worker
    links:
    - redis
    depends_on:
    - redis
  celery-beat:
    build: .
    container_name: celery-beat
    entrypoint: celery
    command: -A notifications.celery beat --loglevel=info
    environment:
        CELERY_BROKER_URL: "redis://redis:6379/0"
        CELERY_RESULT_BACKEND: "redis://redis:6379/0"        
    volumes:
      - .:/var/www/app/beat
    links:
      - celery-worker
      - redis
    depends_on:
      - celery-worker
      - redis
  prometheus:
    image: prom/prometheus:v2.37.9
    command: --web.enable-remote-write-receiver
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/prometheus/prometheus.yml

  redis:
    image: redis
    restart: always
    volumes: 
      - redis:/data
    ports:
    - "6379:6379"
    container_name: redis


volumes:
  postgres_data:
  redis:
  logging:
  static: